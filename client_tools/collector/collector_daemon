#!/usr/bin/env python3

import os, sys
import subprocess, shlex
import signal, time
import logging

logging.basicConfig(level=logging.INFO)

ROOT_PATH = "/home/ubuntu/carfi/CarFiMeasurement/client_tools"
COLLECTOR = os.path.join(ROOT_PATH, "collector/collector.py")
CARFI_PATH = os.path.join(ROOT_PATH, "carfi")
DATA_PATH = "/opt/carfi/data"
TAR_PATH = "/opt/carfi/tar"
LOC_MARKER = "Paris"
DURATION = 300 #secs

if os.path.isdir(ROOT_PATH) == False:
    logging.error("{} is not the path of client_tools folder".format(ROOT_PATH))
    exit(-1)

if os.path.isfile(COLLECTOR) == False:
    logging.error("{} is not the path of collector.py".format(COLLECTOR))
    exit(-1)

if os.path.isdir(CARFI_PATH) == False:
    logging.error("{} is not the path of carfi folder".format(CARFI_PATH))
    exit(-1)

if os.path.isdir(DATA_PATH) == False:
    os.system("mkdir -p {}".format(DATA_PATH))

if os.path.isdir(TAR_PATH) == False:
    os.system("mkdir -p {}".format(TAR_PATH))

collector = None

def sig_handler(sig, frm):
    if collector:
        collector.terminate()
        collector.wait()

    logging.info("CarFi Data Collecting ended.")
    exit(0)

signal.signal(signal.SIGINT, sig_handler)
signal.signal(signal.SIGTERM, sig_handler)

logging.info("CarFi Data Collecting started.")

cmd = "{} -c {} -d {} -t {} -l {}".format(COLLECTOR, CARFI_PATH, DATA_PATH, TAR_PATH, LOC_MARKER)
while True:
    os.system("rm -rf {}".format(os.path.join(DATA_PATH, "*")))
    logging.info("{} for {} secs".format(cmd, DURATION))
    collector = subprocess.Popen(shlex.split(cmd))
    time.sleep(DURATION)
    collector.terminate()
    #to avoid racing condition
    tmp = collector
    collector = None
    tmp.wait()

