#!/bin/bash
# A script for setting up routing tables for MPTCP in the N950.

# Copy this script into /etc/network/if-up.d/

set -e

env > /etc/network/if_up_env

UPLOADER_IFACE=wlxc83a35d1021c
UPLOADER_STATIC_GW="192.168.1.1"

if [ "$IFACE" != "$UPLOADER_IFACE" -o "$MODE" != start ]; then
    exit 0
fi

if [ -z $IFACE ]; then
    exit 0
fi

if [ "$METHOD" != dhcp -a "$METHOD" != ppp -a "$METHOD" != static ]; then
    exit 0
fi

# FIRST, make a table-alias
if [ `grep $IFACE /etc/iproute2/rt_tables | wc -l` -eq 0 ]; then
    NUM=`cat /etc/iproute2/rt_tables | egrep "^[^#]" |  wc -l`
    echo "$NUM  $IFACE " >> /etc/iproute2/rt_tables
fi

if [ "$METHOD" = dhcp ]; then
    IPADDR=`ip addr show dev $IFACE | grep "inet " | awk '{print $2}'`
    SUBNET=${IPADDR#*/}
    IPADDR=${IPADDR%/*}
    IP_P1=$((`echo $IPADDR | awk -F. '{print $1}'`))
    IP_P2=$((`echo $IPADDR | awk -F. '{print $2}'`))
    IP_P3=$((`echo $IPADDR | awk -F. '{print $3}'`))
    IP_P4=$((`echo $IPADDR | awk -F. '{print $4}'`))
    NW_MASK=0
    for (( i=0; i<$SUBNET; i++ )) do
        NW_MASK=$(($NW_MASK<<1|1))
    done
    LEFT=$((32-$SUBNET))
    for (( i=0; i<$LEFT; i++ )) do
        NW_MASK=$(($NW_MASK<<1))
    done
    NW_NUM=$(($IP_P1<<24|$IP_P2<<16|$IP_P3<<8|$IP_P4))
    NW_NUM=$(($NW_NUM & $NW_MASK))
    NW_NUM_P1=$(($NW_NUM>>24 & 0xff))
    NW_NUM_P2=$(($NW_NUM>>16 & 0xff))
    NW_NUM_P3=$(($NW_NUM>>8 & 0xff))
    NW_NUM_P4=$(($NW_NUM & 0xff))
    NW_NUM=$NW_NUM_P1.$NW_NUM_P2.$NW_NUM_P3.$NW_NUM_P4
    GW=`cat /var/lib/dhcp/dhclient.$IFACE.leases | grep "option routers" | tail -n 1 | awk '{print $3}' | cut -d ";" -f 1`
    ip route del default dev $IFACE || true
    ip route add table $IFACE to $NW_NUM/$SUBNET dev $IFACE scope link
    ip route add table $IFACE default via $GW dev $IFACE
    ip rule add from $IPADDR table $IFACE
elif [ "$METHOD" = static ]; then
    IPADDR=`ip addr show dev $IFACE | grep "inet " | awk '{print $2}'`
    SUBNET=${IPADDR#*/}
    IPADDR=${IPADDR%/*}
    NW_NUM=$IF_NETWORK
    GW=$UPLOADER_STATIC_GW
    ip route del default dev $IFACE || true
    ip route add table $IFACE to $NW_NUM/$SUBNET dev $IFACE scope link
    ip route add table $IFACE default via $GW dev $IFACE
    ip rule add from $IPADDR table $IFACE
else
    # PPP-interface
    IPADDR=`ip addr show dev $IFACE | grep "inet " | awk '{print $2}'`
    IPADDR=${IPADDR%/*}
    ip route del default dev $IFACE || true
    ip route add table $IFACE default dev $IFACE scope link
    ip rule add from $IPADDR table $IFACE
fi
